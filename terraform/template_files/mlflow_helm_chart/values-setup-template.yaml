# General namespace for all resources
namespace: ${namespace}

# Parameters for installing MySQL dependency
mysql:
  fullnameOverride: mysql # Name of the created resource
  primary:
    persistence:
      enabled: true
      existingClaim: mysql-pvc # Use volume claim with this name (we will create it in this chart as well)
      storageClass: ""
  auth:
    rootPassword: abc123
    # Create a new user. This is needed so MLflow Tracking Server can connect
    database: mlflow    # DB that will be created
    username: mlflow    # custom user
    password: mlflow123 # custom user password

# Storage class for PVC for MySQL backend store. The 'managed-csi' option causes that data will be stored in an Azure Disk (created on 
# demand when creating this volume). It is used in the tracking_server > mysql-pvc.yaml file.
mySqlMounting:
  storageClass: managed-csi

# MLflow configuration. Here we have the following values:
# - trackingServerSecretName - Name of the secret with values used by the Tracking Server to connect to the backend and artifact store
# - serviceAccountName - Name of the Service Account used in the Job running the MLflow project
# - trackingServerServiceName - Name of the Service which Tracking Server deployment will be using
# - Parameters related to the Azure Storage Account which will serve as an artifact store:
#   - azureConnectionString - Connection string to the Storage Account. It will be stored in the trackingServerSecretName secret.
#   - mlflowStorageAccountName - Name of the Storage Account. Used in the Tracking Server Deployment.
#   - mlflowContainerName - Name of the container in the Storage Account which will be used. Used in the Tracking Server Deployment.
mlflow:
  trackingServerSecretName: mlflow-ts-secret
  serviceAccountName: ${service_account_name}
  trackingServerServiceName: ${tracking_server_service_name}
  azureConnectionString: DefaultEndpointsProtocol=https;AccountName=${mlflow_storage_account_name};AccountKey=${mlflow_storage_account_access_key};EndpointSuffix=core.windows.net
  mlflowStorageAccountName: ${mlflow_storage_account_name}
  mlflowContainerName: ${mlflow_container}

# Configuration for a Secret with credentials to ACR where we keep images used in:
# - Tracking Server deployment (from the tracking_server folder in this chart)
# - Service Account which will be used when running MLproject as a Job (that Job is deployed using another chart, the mlflow_project one)
acrSecret:
  secretName: ${acr_secret_name} # Name of the created secret
  server: ${acr_url} # ACR URL (<registry-name>.azurecr.io)
  username: ${acr_sp_id}  # Service Principal client ID
  password: ${acr_sp_password} # Service Principal password
  email: unused@example.com # It doesn't matter what we put here but it is needed

# Information about ACR and images it contains
acr:
  url: ${acr_url}
  trackingServerImageName: ${tracking_server_image_name} # Name of the image used for the MLflow Tracking Server


# When running a MLflow project in a Job deployed using the mlflow_project chart, MLproject files will be provided from Azure Storage Account
# through a mounting. It works in this way:
# - Mount a Volume to the Job running MLflow project
# - Volume uses a Azure file Storage Class to store data in a File share in Azure Storage Account
# - Storage Class uses a secret to access Storage Account
# Below variables are related to this process.
mlflowProjectMounting:
  storageClassName: azurefiles # Name of the created Storage Class
  pvcName: azurefiles-pvc # Name of the created PVC
  secretName: sa-secret # Secret with credentials for accessing Storage Account
  storageAccountName: ${mlflow_storage_account_name}
  storageAccountKey: ${mlflow_storage_account_access_key}
  fileShareName: ${sa_file_share_name}